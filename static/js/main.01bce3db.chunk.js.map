{"version":3,"sources":["styles.ts","components/AddList.tsx","components/Card.tsx","components/Cards/styles.ts","service/index.ts","components/Cards/TodoCards.tsx","components/Loader.tsx","components/Modal/AddModal.tsx","components/Modal/DeleteModal.tsx","components/Promotion.tsx","constant/const.ts","components/ButtonTanslate.tsx","redux/themeActions.tsx","themes.ts","components/Modal/EditModal.tsx","components/Modal/ConfirmModal.tsx","components/Modal/CreateListModal.tsx","pages/Main.tsx","pages/action.ts","App.tsx","redux/reducers/todoReducers.ts","redux/reducers/ModalReducers.ts","redux/reducers/postsReducer.ts","redux/reducers/themeReducer.tsx","redux/store.ts","index.tsx"],"names":["StyledSelect","styled","Select","props","theme","title","StyledPharagraph","p","interface","Title","h1","BodyStyled","div","backgroundColor","ModalPromotion","primary","WrapperLoader","PromotionCard","Card","FormItemButton","Input","input","EditModalInput","textColor","StyledCard","Row","Columns","TaskDescription","TaskTitle","ContentWrapper","AddButton","Button","FormButton","AddComponent","StyledModal","CloseIcon","CloseOutlined","AddList","dispatch","useDispatch","onClick","type","Text","Typography","nameCard","children","style","display","justifyContent","strong","filteredNumbers","array","Array","from","keys","filter","el","includes","TodoCard","name","column","t","useTranslation","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","background","padding","width","borderRadius","map","item","index","draggableId","id","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","margin","color","data","editTask","description","value","deleteColumns","cursor","placeholder","Loader","className","AddModal","isOpen","onClose","post","useState","todoDescription","setTodoDescription","nameColumn","useSelector","state","modal","ReactDOM","createPortal","level","required","autoFocus","onChange","e","target","disabled","length","body","document","DeleteModal","taskId","nameDeleteColumns","htmlType","Promotion","ButtonTranslate","i18n","ready","changeLanguage","lng","InputLabel","label","MenuItem","APPLY_THEME","darkTheme","lightTheme","EditModal","todoTitle","setTodoTitle","todos","idTask","task","textAlign","marginBottom","defaultValue","maxLength","ConfirmModal","CreateListModal","nameList","setNameList","wrapper","cardWrapper","marginRight","MainPage","React","setPost","card","cards","Object","entries","isOpenCreate","isOpenDelete","isOpenEdit","isOpenConfirm","isOpenListModal","load","a","getState","posts","stateNewId","randomElement","Math","floor","random","URL","fetch","response","json","result","console","error","useEffect","changeTheme","payload","applyTheme","interval","setInterval","time","Date","getHours","clearInterval","onDragEnd","source","destination","copiedList","splice","reorderedItem","list","fromListName","toListName","idx","columnName","columnTask","span","GlobalStyle","createGlobalStyle","App","themeReducer","initialState","todoList","inProgressList","doneList","action","slice","uuidv4","push","copied","filteredCopy","copiedSate","filteredTask","copiedState","fromList","taskIdx","findIndex","copiedTask","toList","initialStateModal","Actions","assign","rootReducer","combineReducers","i18next","init","interpolation","escapeValue","resources","en","common","common_en","rus","common_rus","middleware","thunk","persistConfig","key","storage","pReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","render","StrictMode","I18nextProvider","getElementById"],"mappings":"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","file":"static/js/main.01bce3db.chunk.js","sourcesContent":["import { Card, Button, Row } from \"antd\";\nimport styled from \"styled-components\";\nimport { CloseOutlined } from \"@ant-design/icons\";\nimport Select from \"@mui/material/Select\";\n\nexport const StyledSelect = styled(Select)`\n  color: ${(props) => props.theme.title};\n  .jIWkLN {\n  }\n`;\n\nexport const StyledPharagraph = styled.p`\n  color: ${(props: any) => props.theme.interface};\n`;\n\nexport const Title = styled.h1`\n  color: ${(props) => props.theme.title};\n`;\n\nexport const BodyStyled = styled.div`\n  background-color: ${(props: any) => props.theme.backgroundColor};\n`;\n\nexport const ModalPromotion = styled.div`\n  background: ${(props: any) => props.theme.primary};\n  border-radius: 10px;\n  padding: 5px;\n  margin: 10px 0 0 0;\n  color: #fff;\n  font-size: 12px;\n`;\n\nexport const WrapperLoader = styled.div`\n  position: absolute;\n  bottom: 50px;\n  left: 45%;\n`;\n\nexport const PromotionCard = styled(Card)`\n  background: ${(props: any) => props.theme.primary};\n  margin: 0 auto 10px;\n  color: #fff;\n  border: 1px solid #d3d3d3;\n  position: absolute;\n  bottom: 0;\n  left: 15%;\n  padding: 10px;\n  border-radius: 5px;\n  -webkit-box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  -moz-box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  text-align: center;\n`;\n\nexport const FormItemButton = styled.div`\n  display: flex;\n  justify-content: right;\n  margin-top: 10px;\n`;\n\nexport const Input = styled.input`\n  border: 0;\n  border-radius: 5px;\n  width: 100%;\n  height: 40px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const EditModalInput = styled.input`\n  border: 0;\n  width: 90%;\n  background: transparent;\n  margin: 10px 0 0;\n  color: ${(props: any) => props.theme.textColor};\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const StyledRow = styled(Row)`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const StyledCard = styled(Card)`\n  width: 300px;\n  background: ${(props: any) => props.theme.interface};\n  padding: 10px;\n  text-align: left;\n  color: ${(props) => props.theme.textColor};\n  border-radius: 10px;\n`;\n\nexport const Columns = styled.div`\n  border-radius: 5px;\n  background: #fff;\n  display: flex;\n  justify-content: space-between;\n  padding: 5px;\n  -webkit-box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  -moz-box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n`;\n\nexport const TaskDescription = styled.p`\n  margin: 0;\n  font-size: 12px;\n  color: #000;\n  opacity: 0.5;\n`;\n\nexport const TaskTitle = styled.p`\n  margin: 0;\n`;\n\nexport const ContentWrapper = styled.div`\n  width: 90%;\n`;\n\nexport const AddButton = styled(Button)`\n  background: transparent;\n  margin-left: 10px;\n  border: 0;\n  cursor: pointer;\n  color: ${(props) => props.theme.textColor};\n`;\n\nexport const FormButton = styled(Button)`\n  margin-right: 10px;\n  border: 0;\n  background: ${(props) => props.theme.primary};\n  color: #fff;\n  border-radius: 2px;\n  cursor: pointer;\n  padding: 10px;\n  &:disabled {\n    background: ${(props: any) => props.theme.backgroundColor};\n    cursor: not-allowed;\n  }\n`;\n\nexport const AddComponent = styled.p`\n  background: #00adff;\n  padding: 10px;\n  width: 300px;\n  border-radius: 10px;\n  margin-top: 0;\n  cursor: pointer;\n`;\n\nexport const StyledModal = styled.div`\n  position: relative;\n  bottom: 189px;\n  left: 38%;\n  z-index: 2;\n  width: 300px;\n  background: ${(props: any) => props.theme.interface};\n  border-radius: 10px;\n  color: ${(props: any) => props.theme.textColor};\n  text-align: center;\n  padding: 10px;\n  -webkit-box-shadow: 4px 4px 30px 15px rgba(34, 60, 80, 0.2);\n  -moz-box-shadow: 4px 4px 30px 15px rgba(34, 60, 80, 0.2);\n  box-shadow: 4px 4px 30px 15px rgba(34, 60, 80, 0.2);\n`;\n\nexport const CloseIcon = styled(CloseOutlined)`\n  position: absolute;\n  top: 7px;\n  right: 7px;\n`;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { AddComponent } from \"../styles\";\n\nexport function AddList() {\n  const dispatch = useDispatch();\n\n  const openListModal = () => {\n    dispatch({ type: \"OPEN_NEW_LIST_MODAL\" });\n  };\n  return (\n    <AddComponent onClick={openListModal}>+ Add another List</AddComponent>\n  );\n}\n","import React from \"react\";\nimport { StyledCard } from \"../styles\";\nimport { Typography } from \"antd\";\n\nconst { Text } = Typography;\n\ninterface CardProps {\n  nameCard: string;\n  children?: React.ReactNode;\n}\n\nexport function Card({ nameCard, children }: CardProps): JSX.Element {\n  return (\n    <StyledCard>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Text strong>{nameCard}</Text>\n      </div>\n      <div>{children}</div>\n    </StyledCard>\n  );\n}\n","import { DraggingStyle, NotDraggingStyle } from \"react-beautiful-dnd\";\n\nconst grid = 8;\n\nexport const getItemStyle = (\n  isDragging: boolean,\n  draggableStyle: DraggingStyle | NotDraggingStyle | undefined\n): React.CSSProperties => ({\n  userSelect: \"none\",\n  padding: grid,\n  margin: `0 0 ${grid}px 0`,\n  background: isDragging ? \"lightgreen\" : \"grey\",\n  color: \" #fff\",\n  ...draggableStyle,\n});\n\nexport const getListStyle = (isDraggingOver: boolean): React.CSSProperties => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 280,\n  borderRadius: 10,\n});\n","import { Todo } from \"../types/Todos\";\n\nexport const filteredNumbers = (array: any) => {\n  const exampleArray = Array.from(Array(100).keys());\n  const newNumber = exampleArray.filter((el) => {\n    return !array.includes(el);\n  });\n  return newNumber;\n};\n\nexport function editTask(item: Todo, dispatch: any, name: string) {\n  const data = { id: item.id, name: name };\n  dispatch({ type: \"OPEN_EDIT_MODAL\", data });\n}\n\nexport function deleteColumns(item: Todo, dispatch: any, name: string) {\n  const data = { id: item.id, name: name };\n  dispatch({ type: \"OPEN_DELETE_MODAL\", data });\n}\n","import {\n  AddButton,\n  Columns,\n  ContentWrapper,\n  TaskDescription,\n  TaskTitle,\n} from \"../../styles\";\nimport DeleteTwoTone from \"@ant-design/icons/lib/icons/DeleteTwoTone\";\nimport { useDispatch } from \"react-redux\";\nimport { Card } from \"../Card\";\nimport { Todo } from \"../../types/Todos\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { getItemStyle, getListStyle } from \"./styles\";\nimport { useTranslation } from \"react-i18next\";\nimport { deleteColumns, editTask } from \"../../service\";\n\ninterface TodoCardProps {\n  name: string;\n  column: any;\n}\n\nexport const TodoCard = ({ name, column }: TodoCardProps): JSX.Element => {\n  const { t } = useTranslation(\"common\");\n  const dispatch = useDispatch();\n\n  return (\n    <Card nameCard={name}>\n      <Droppable droppableId={name}>\n        {(provided, snapshot): JSX.Element => (\n          <div\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            style={getListStyle(snapshot.isDraggingOver)}\n          >\n            {column.map((item: Todo, index: number) => (\n              <Draggable key={item.id} draggableId={item.id} index={index}>\n                {(provided, snapshot): JSX.Element => (\n                  <div>\n                    <Columns\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={getItemStyle(\n                        snapshot.isDragging,\n                        provided.draggableProps.style\n                      )}\n                    >\n                      <ContentWrapper\n                        onClick={() => {\n                          editTask(item, dispatch, name);\n                        }}\n                      >\n                        <TaskTitle>{item.description}</TaskTitle>\n                        <TaskDescription>{item.value}</TaskDescription>\n                      </ContentWrapper>\n                      <DeleteTwoTone\n                        onClick={(): void => {\n                          deleteColumns(item, dispatch, name);\n                        }}\n                        style={{ cursor: \"pointer\" }}\n                      />\n                    </Columns>\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n      <AddButton\n        onClick={() => {\n          const data = { name: name };\n          dispatch({ type: \"OPEN_CREATE_MODAL\", data });\n        }}\n      >\n        {t(\"todoCards.addButton\")}\n      </AddButton>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { WrapperLoader } from \"../styles\";\nimport \"./loader.css\";\n\nexport function Loader() {\n  return (\n    <WrapperLoader>\n      <div className=\"lds-roller\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </WrapperLoader>\n  );\n}\n","// eslint-disable-next-line no-use-before-define\nimport React, { ReactNode, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  CloseIcon,\n  StyledModal,\n  FormItemButton,\n  FormButton,\n  Input,\n  ModalPromotion,\n} from \"../../styles\";\nimport { Typography } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PostsProps } from \"../../pages/Main\";\nimport { useTranslation } from \"react-i18next\";\n\nconst { Title } = Typography;\n\ninterface AddModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  children?: ReactNode;\n  post?: PostsProps;\n}\nexport const AddModal = ({ isOpen, onClose, post }: AddModalProps) => {\n  const { t } = useTranslation(\"common\");\n  const [todoDescription, setTodoDescription] = useState(\"\");\n  const dispatch = useDispatch();\n  const nameColumn = useSelector((state: any) => state.modal.name);\n\n  const addTask = (): void => {\n    const data = { name: `${nameColumn}`, value: todoDescription };\n    dispatch({ type: \"ADD_TASK\", data });\n    setTodoDescription(\"\");\n    onClose();\n  };\n\n  if (!isOpen) return null;\n  return ReactDOM.createPortal(\n    <StyledModal>\n      <Title level={3} style={{ margin: \"0, 0, 10px, 0 \" }}>\n        {t(\"modal.addTask\")}\n      </Title>\n      <CloseIcon onClick={onClose} />\n      <Input\n        required\n        autoFocus\n        placeholder={t(\"modal.placeholder\")}\n        type=\"text\"\n        value={todoDescription}\n        onChange={(e) => setTodoDescription(e.target.value)}\n      />\n      <FormItemButton>\n        <FormButton style={{ background: \"#ff4d4f\" }} onClick={onClose}>\n          {t(\"modal.cancel\")}\n        </FormButton>\n        <FormButton onClick={addTask} disabled={todoDescription.length === 0}>\n          {t(\"modal.add\")}\n        </FormButton>\n      </FormItemButton>\n\n      {post ? (\n        <ModalPromotion>\n          <p>{post.title}</p>\n          <p>\n            {t(\"modal.promotion\")}&nbsp; {post.id}\n          </p>\n          <p>{post.body}</p>\n        </ModalPromotion>\n      ) : (\n        <div />\n      )}\n    </StyledModal>,\n    document.body\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  CloseIcon,\n  StyledModal,\n  FormItemButton,\n  FormButton,\n} from \"../../styles\";\nimport { Typography } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n\nconst { Title } = Typography;\n\ninterface DeleteModalProps {\n  isOpen: boolean;\n  taskId: string;\n  onClose: () => void;\n}\nexport const DeleteModal = ({ isOpen, onClose, taskId }: DeleteModalProps) => {\n  const { t } = useTranslation(\"common\");\n  const dispatch = useDispatch();\n\n  const nameDeleteColumns = useSelector((state: any) => state.modal.name);\n\n  const onDelete = () => {\n    const data = {\n      name: nameDeleteColumns,\n      id: taskId,\n    };\n    dispatch({ type: \"DELETE_TASK\", data });\n    onClose();\n  };\n\n  if (!isOpen) return null;\n  return ReactDOM.createPortal(\n    <StyledModal>\n      <Title level={3} style={{ margin: \"0, 0, 10px, 0 \" }}>\n        {t(\"modal.deleteTitle\")}\n      </Title>\n      <CloseIcon onClick={onClose} />\n      <FormItemButton style={{ justifyContent: \"center\" }}>\n        <FormButton onClick={onClose} htmlType=\"submit\">\n          {t(\"modal.no\")}\n        </FormButton>\n        <FormButton style={{ background: \"#ff4d4f\" }} onClick={onDelete}>\n          {t(\"modal.yes\")}\n        </FormButton>\n      </FormItemButton>\n    </StyledModal>,\n    document.body\n  );\n};\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { PostsProps } from \"../pages/Main\";\nimport { PromotionCard } from \"../styles\";\nimport { Loader } from \"./Loader\";\n\ninterface PromotionProps {\n  post?: PostsProps;\n}\n\nexport function Promotion({ post }: PromotionProps): JSX.Element {\n  const { t } = useTranslation(\"common\");\n  if (!post) return <Loader />;\n  return (\n    <PromotionCard title={post.title} style={{ width: 900 }}>\n      <p>\n        {t(\"modal.promotion\")}&nbsp;\n        {post.id}\n      </p>\n      <p>{post.body}</p>\n    </PromotionCard>\n  );\n}\n","export function noop(...args: unknown[]): void {\n  // Do nothing\n}\n\nexport const POST_LIMIT = 100;\n\nexport const MINUTE_MS = 10000;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { StyledPharagraph, StyledSelect } from \"../styles\";\n\nexport function ButtonTranslate(): JSX.Element {\n  const { i18n, ready, t } = useTranslation(\"common\");\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(lng);\n  };\n\n  if (ready) {\n    return (\n      <div>\n        <InputLabel>\n          <StyledPharagraph>{t(\"lang.langTitle\")}</StyledPharagraph>\n        </InputLabel>\n        <StyledSelect style={{ width: 75 }} label=\"Language\">\n          <MenuItem onClick={() => changeLanguage(\"rus\")} value={11}>\n            {t(\"lang.rus\")}\n          </MenuItem>\n          <MenuItem onClick={() => changeLanguage(\"en\")} value={10}>\n            {t(\"lang.en\")}\n          </MenuItem>\n        </StyledSelect>\n      </div>\n    );\n  }\n\n  return <span>Loading...</span>;\n}\n","export const APPLY_THEME = \"APPLY_THEME\";\n\nexport const applyTheme = (theme: any) => {\n  return {\n    type: APPLY_THEME,\n    payload: theme,\n  };\n};\n","export const darkTheme = {\n  backgroundColor: \"#333333\",\n  textColor: \"#000000\",\n  interface: \"#e0e0e0\",\n  title: \"#ffffff\",\n  primary: \"#77ccdd\",\n};\n\nexport const lightTheme = {\n  backgroundColor: \"#e0e0e0\",\n  textColor: \"#ffffff\",\n  interface: \"#333333\",\n  title: \"#000000\",\n  primary: \"#55aacc\",\n};\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  CloseIcon,\n  EditModalInput,\n  FormButton,\n  FormItemButton,\n  StyledModal,\n} from \"../../styles\";\nimport { Todo } from \"../../types/Todos\";\n\ninterface EditModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  post?: Todo;\n}\n\nexport function EditModal({ isOpen, onClose }: EditModalProps) {\n  const [todoDescription, setTodoDescription] = useState(\"\");\n  const [todoTitle, setTodoTitle] = useState(\"\");\n\n  const nameColumn = useSelector((state: any) => state.modal.name);\n  const post = useSelector((state: any) => state.todos[nameColumn]);\n  const idTask = useSelector((state: any) => state.modal.id);\n\n  const { t } = useTranslation(\"common\");\n  const dispatch = useDispatch();\n\n  if (!post) return null;\n  const task = post.filter((post: any) => post.id === idTask)[0];\n\n  const openConfirmModal = () => {\n    const data = {\n      id: `${idTask}`,\n      name: `${nameColumn}`,\n      value: `${todoDescription.length === 0 ? task.value : todoDescription}`,\n      description: `${todoTitle.length === 0 ? task.description : todoTitle}`,\n    };\n\n    dispatch({ type: \"OPEN_CONFIRM_MODAL\", data });\n  };\n\n  if (!isOpen) return null;\n\n  return ReactDOM.createPortal(\n    <StyledModal>\n      <div style={{ textAlign: \"left\" }}>\n        <p style={{ marginBottom: 0 }}>Title: </p>&nbsp;\n        <EditModalInput\n          type=\"text\"\n          defaultValue={task.description}\n          onChange={(e) => setTodoTitle(e.target.value)}\n        />\n      </div>\n      <CloseIcon onClick={onClose} />\n      <h3 style={{ textAlign: \"left\", marginBottom: 0 }}>\n        {t(\"modal.description\")}:\n      </h3>\n      &nbsp;\n      <EditModalInput\n        maxLength={100}\n        defaultValue={task.value}\n        type=\"text\"\n        onChange={(e) => setTodoDescription(e.target.value)}\n      />\n      <FormItemButton>\n        <FormButton style={{ background: \"#ff4d4f\" }} onClick={onClose}>\n          {t(\"modal.cancel\")}\n        </FormButton>\n        <FormButton onClick={openConfirmModal}>{t(\"modal.save\")}</FormButton>\n      </FormItemButton>\n    </StyledModal>,\n    document.body\n  );\n}\n","import Title from \"antd/lib/typography/Title\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  CloseIcon,\n  FormButton,\n  FormItemButton,\n  StyledModal,\n} from \"../../styles\";\n\ninterface ConfirmModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport function ConfirmModal({ isOpen, onClose }: ConfirmModalProps) {\n  const { t } = useTranslation(\"common\");\n  const dispatch = useDispatch();\n  const { id, name, value, description } = useSelector(\n    (state: any) => state.modal\n  );\n\n  const handleCancel = (): void => {\n    const data = {\n      id,\n      name,\n      value,\n      description,\n    };\n    dispatch({ type: \"OPEN_EDIT_MODAL\", data });\n  };\n\n  const editTask = (): void => {\n    const data = {\n      id,\n      name,\n      value: `${value.length === 0 ? \"\" : value}`,\n      description: `${description.length === 0 ? \"\" : description}`,\n    };\n    dispatch({ type: \"EDIT_TASK\", data });\n    onClose();\n  };\n\n  if (!isOpen) return null;\n  return ReactDOM.createPortal(\n    <StyledModal>\n      <Title level={3} style={{ margin: \"0, 0, 10px, 0 \" }}>\n        {t(\"modal.deleteTitle\")}\n      </Title>\n\n      <CloseIcon onClick={onClose} />\n      <FormItemButton style={{ justifyContent: \"center\" }}>\n        <FormButton onClick={handleCancel} htmlType=\"submit\">\n          {t(\"modal.no\")}\n        </FormButton>\n        <FormButton onClick={editTask} style={{ background: \"#ff4d4f\" }}>\n          {t(\"modal.yes\")}\n        </FormButton>\n      </FormItemButton>\n    </StyledModal>,\n    document.body\n  );\n}\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  CloseIcon,\n  FormButton,\n  FormItemButton,\n  Input,\n  StyledModal,\n} from \"../../styles\";\nimport { Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\ninterface CreateListModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport function CreateListModal({ isOpen, onClose }: CreateListModalProps) {\n  const { t } = useTranslation(\"common\");\n  const [nameList, setNameList] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const addList = () => {\n    const data = { name: nameList };\n    dispatch({ type: \"CREATE_NEW_LIST\", data });\n    setNameList(\"\");\n    onClose();\n  };\n\n  if (!isOpen) return null;\n  return ReactDOM.createPortal(\n    <StyledModal>\n      <Title level={3} style={{ margin: \"0, 0, 10px, 0 \" }}>\n        {t(\"modal.newList\")}\n      </Title>\n      <CloseIcon onClick={onClose} />\n      <Input\n        required\n        autoFocus\n        placeholder={t(\"modal.listPlaceholder\")}\n        type=\"text\"\n        value={nameList}\n        onChange={(e) => setNameList(e.target.value)}\n      />\n      <FormItemButton>\n        <FormButton style={{ background: \"#ff4d4f\" }} onClick={onClose}>\n          {t(\"modal.cancel\")}\n        </FormButton>\n        <FormButton onClick={addList}>{t(\"modal.add\")}</FormButton>\n      </FormItemButton>\n    </StyledModal>,\n    document.body\n  );\n}\n","/* eslint-disable no-use-before-define */\n\nimport { Col } from \"antd\";\nimport React, { useEffect } from \"react\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AddList } from \"../components/AddList\";\nimport { TodoCard } from \"../components/Cards/TodoCards\";\nimport { Loader } from \"../components/Loader\";\nimport { AddModal } from \"../components/Modal/AddModal\";\nimport { DeleteModal } from \"../components/Modal/DeleteModal\";\nimport { Promotion } from \"../components/Promotion\";\nimport { Post } from \"../types/Todos\";\nimport { loadData } from \"./action\";\nimport { useTranslation } from \"react-i18next\";\nimport { ButtonTranslate } from \"../components/ButtonTanslate\";\n// eslint-disable-next-line no-unused-vars\nimport { ThemeSelector } from \"../components/ThemeSelector\";\nimport { applyTheme } from \"../redux/themeActions\";\nimport { darkTheme, lightTheme } from \"../themes\";\nimport { MINUTE_MS } from \"../constant/const\";\nimport { EditModal } from \"../components/Modal/EditModal\";\nimport { ConfirmModal } from \"../components/Modal/ConfirmModal\";\nimport { CreateListModal } from \"../components/Modal/CreateListModal\";\nimport { CSSProperties } from \"styled-components\";\nimport { Title } from \"../styles\";\n\nconst wrapper: CSSProperties = {\n  display: \"flex\",\n};\n\nconst cardWrapper: CSSProperties = {\n  marginRight: \"10px\",\n};\n\nexport interface PostsProps {\n  body: string;\n  id: string;\n  title: string;\n  userId: string;\n  isViewed: boolean;\n}\n\n// eslint-disable-next-line no-undef\nexport function MainPage(): JSX.Element {\n  const [post, setPost] = React.useState<Post | undefined>();\n  const dispatch = useDispatch();\n  const { t } = useTranslation(\"common\");\n  const card = useSelector((state: any) => state.todos);\n  const cards = Object.entries(card);\n\n  const {\n    isOpenCreate,\n    isOpenDelete,\n    isOpenEdit,\n    isOpenConfirm,\n    isOpenListModal,\n    id,\n  } = useSelector((state: any) => state.modal);\n  const state = useSelector((state: any) => state.todos);\n\n  const onDragEnd = (result: DropResult): void => {\n    const { source, destination, draggableId } = result;\n    if (!destination) return;\n    if (source.droppableId === destination.droppableId) {\n      const copiedList = [...state[source.droppableId]];\n      const [reorderedItem] = copiedList.splice(result.source.index, 1);\n      copiedList.splice(destination.index, 0, reorderedItem);\n\n      const data = { name: `${source.droppableId}`, list: copiedList };\n      dispatch({ type: \"REVISE_STATE\", data });\n    } else {\n      const data = {\n        fromListName: source.droppableId,\n        toListName: destination.droppableId,\n        taskId: draggableId,\n      };\n      dispatch({ type: \"MOVE_POST\", data });\n    }\n  };\n\n  const load = async (): Promise<void> => {\n    const result = await dispatch(loadData());\n    // @ts-ignore\n    setPost(result);\n  };\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  const changeTheme = (theme: any) => {\n    dispatch(applyTheme(theme));\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const time = new Date().getHours();\n      if (time > 6 && time < 18) {\n        changeTheme(lightTheme);\n      } else {\n        changeTheme(darkTheme);\n      }\n    }, MINUTE_MS);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <ButtonTranslate />\n        <Title>{t(\"welcome.title\")}</Title>\n        <div style={wrapper}>\n          {cards.map((el, idx) => {\n            const [columnName, columnTask] = el;\n            return (\n              <div key={idx} style={cardWrapper}>\n                <TodoCard name={columnName} column={columnTask} />\n              </div>\n            );\n          })}\n          <Col span={6}>\n            <AddList />\n          </Col>\n        </div>\n      </DragDropContext>\n      {/* <ThemeSelector /> */}\n      <AddModal\n        isOpen={isOpenCreate}\n        onClose={() => {\n          dispatch({ type: \"CLOSE_MODAL\" });\n        }}\n        post={post}\n      />\n      <DeleteModal\n        isOpen={isOpenDelete}\n        taskId={id}\n        onClose={() => {\n          dispatch({ type: \"CLOSE_DELETE_MODAL\" });\n        }}\n      />\n      <EditModal\n        isOpen={isOpenEdit}\n        onClose={() => {\n          dispatch({ type: \"CLOSE_EDIT_MODAL\" });\n        }}\n      />\n      <ConfirmModal\n        isOpen={isOpenConfirm}\n        onClose={() => {\n          dispatch({ type: \"CLOSE_CONFIRM_MODAL\" });\n        }}\n      />\n      <CreateListModal\n        isOpen={isOpenListModal}\n        onClose={() => {\n          dispatch({ type: \"CLOSE_NEW_LIST_MODAL\" });\n        }}\n      />\n      {post ? <Promotion post={post} /> : <Loader />}\n    </>\n  );\n}\n","import { POST_LIMIT } from \"../constant/const\";\nimport { filteredNumbers } from \"../service\";\n\nexport const loadData = () => async (dispatch: any, getState: any) => {\n  const { posts } = getState().posts;\n\n  if (posts.length === POST_LIMIT) {\n    dispatch({ type: \"DROP_STATE\" });\n  }\n  const stateNewId = filteredNumbers(posts);\n  const randomElement =\n    stateNewId[Math.floor(Math.random() * stateNewId.length)];\n\n  const URL = `https://jsonplaceholder.typicode.com/posts/${randomElement}`;\n  try {\n    const response = await fetch(URL);\n    const result = await response.json();\n\n    if (result) {\n      dispatch({ type: \"SET_VIEWED_POST\", data: result.id });\n    }\n\n    return result;\n  } catch (e) {\n    console.error(e);\n  }\n};\n","import React from \"react\";\nimport { MainPage } from \"./pages/Main\";\n\nimport { useSelector } from \"react-redux\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { BodyStyled } from \"./styles\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    background: ${(props: any) => props.theme.backgroundColor};\n  }\n`;\n\nexport const App = (): JSX.Element => {\n  const theme = useSelector((state: any) => state.themeReducer.theme);\n  return (\n    <ThemeProvider theme={theme}>\n      <BodyStyled className=\"body\">\n        <GlobalStyle />\n        <MainPage />\n      </BodyStyled>\n    </ThemeProvider>\n  );\n};\n","import { Todo } from \"../../types/Todos\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ntype dataType = {\n  name: string;\n  otherArray: string;\n  value: string;\n  id?: string;\n  list: Todo[];\n  description: string;\n};\n\nexport type AddTodoList = {\n  type: string;\n  data: dataType;\n};\n\ntype StateType = {\n  [key: string]: Todo[];\n};\n\nconst initialState: StateType = {\n  todoList: [],\n  inProgressList: [],\n  doneList: [],\n};\n\nexport const todos = (state = initialState, action: AddTodoList) => {\n  const { data } = action;\n  switch (action.type) {\n    case \"ADD_TASK\":\n      const copiedList = state[data.name].slice();\n      const task: Todo = { id: uuidv4(), description: data.value };\n      copiedList.push(task);\n      return {\n        ...state,\n        [data.name]: copiedList,\n      };\n    case \"CREATE_NEW_LIST\":\n      return {\n        ...state,\n        [data.name]: [],\n      };\n    case \"DELETE_TASK\":\n      const copied = state[data.name].slice();\n      const filteredCopy = copied.filter((task) => task.id !== data.id);\n      return {\n        ...state,\n        [data.name]: filteredCopy,\n      };\n    case \"EDIT_TASK\":\n      const copiedSate = state[data.name].slice();\n      const filteredTask = copiedSate.filter((task) => task.id === data.id);\n      const a = filteredTask[0];\n      a.value = data.value;\n      a.description = data.description;\n      return {\n        ...state,\n      };\n    case \"REVISE_STATE\":\n      const copiedState = { ...state };\n      copiedState[data.name] = data.list;\n      return {\n        ...copiedState,\n      };\n    case \"MOVE_POST\":\n      // @ts-ignore\n      const { fromListName, toListName, taskId } = data;\n      const fromList = state[fromListName];\n      const taskIdx = fromList.findIndex((el) => el.id === taskId);\n      if (fromList && taskIdx !== -1) {\n        const copiedTask = fromList[taskIdx];\n        const toList = state[toListName];\n        toList.push(copiedTask);\n        return {\n          ...state,\n          [toListName]: toList,\n          [fromListName]: fromList.filter((el) => el.id !== taskId),\n        };\n      }\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","import { AddTodoList } from \"./todoReducers\";\n\nexport type ModalState = {\n  isOpenCreate: boolean;\n  isOpenDelete: boolean;\n  isOpenEdit: boolean;\n  isOpenConfirm: boolean;\n  isOpenListModal: boolean;\n  id?: string;\n  name?: string;\n  value?: string;\n  description?: string;\n};\n\nconst initialStateModal: ModalState = {\n  isOpenCreate: false,\n  isOpenDelete: false,\n  isOpenEdit: false,\n  isOpenConfirm: false,\n  isOpenListModal: false,\n  id: \"\",\n  name: \"\",\n  value: \"\",\n  description: \"\",\n};\n\nexport const modal = (state = initialStateModal, action: AddTodoList) => {\n  switch (action.type) {\n    case \"OPEN_CREATE_MODAL\":\n      return {\n        isOpenCreate: true,\n        name: action.data.name,\n      };\n\n    case \"OPEN_DELETE_MODAL\":\n      return {\n        isOpenDelete: true,\n        id: action.data.id,\n        name: action.data.name,\n      };\n    case \"OPEN_EDIT_MODAL\":\n      return {\n        isOpenEdit: true,\n        id: action.data.id,\n        name: action.data.name,\n      };\n    case \"OPEN_CONFIRM_MODAL\":\n      return {\n        isOpenConfirm: true,\n        id: action.data.id,\n        name: action.data.name,\n        value: action.data.value,\n        description: action.data.description,\n      };\n    case \"OPEN_NEW_LIST_MODAL\":\n      return {\n        isOpenListModal: true,\n      };\n    case \"CLOSE_MODAL\":\n      return {\n        isOpenCreate: false,\n      };\n    case \"CLOSE_DELETE_MODAL\":\n      return {\n        isOpenDelete: false,\n      };\n    case \"CLOSE_EDIT_MODAL\":\n      return {\n        isOpenEdit: false,\n      };\n    case \"CLOSE_CONFIRM_MODAL\":\n      return {\n        isOpenConfirm: false,\n      };\n    case \"CLOSE_NEW_LIST_MODAL\":\n      return {\n        isOpenListModal: false,\n      };\n    default:\n      return state;\n  }\n};\n","/* eslint-disable no-case-declarations */\nexport type Posts = {\n  type: string;\n  data: string;\n};\n\ntype StateType = {\n  posts: string[];\n};\n\nconst initialState: StateType = {\n  posts: [],\n};\n\nexport const posts = (state = initialState, action: Posts) => {\n  const { data } = action;\n  switch (action.type) {\n    case \"SET_VIEWED_POST\":\n      const posts = state.posts.slice();\n      posts.push(data);\n      return {\n        ...state,\n        posts,\n      };\n    case \"DROP_STATE\":\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import * as Actions from \"../themeActions\";\nimport { darkTheme } from \"../../themes\";\n\nconst initialState = {\n  theme: darkTheme,\n};\n\nexport const themeReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case Actions.APPLY_THEME:\n      return Object.assign({}, { theme: action.payload });\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { todos } from \"./reducers/todoReducers\";\nimport { modal } from \"./reducers/ModalReducers\";\nimport { posts } from \"./reducers/postsReducer\";\nimport { themeReducer } from \"./reducers/themeReducer\";\n\nconst allReducers = {\n  ...todos,\n  ...modal,\n  ...posts,\n  ...themeReducer,\n};\n\nexport type AppState = {\n  [key in keyof typeof allReducers]: ReturnType<typeof allReducers[key]>;\n};\n\nexport const rootReducer = combineReducers({\n  todos,\n  modal,\n  posts,\n  themeReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { rootReducer } from \"./redux/store\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport thunk from \"redux-thunk\";\n// import looger from \"redux-logger\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18next from \"i18next\";\nimport common_rus from \"./translations/rus/common.json\";\nimport common_en from \"./translations/en/common.json\";\n\ni18next.init({\n  interpolation: { escapeValue: false },\n  lng: \"en\",\n  resources: {\n    en: {\n      common: common_en,\n    },\n    rus: {\n      common: common_rus,\n    },\n  },\n});\n\nconst middleware = [thunk];\n\nconst persistConfig = {\n  key: \"TodoList\",\n  storage: storage,\n};\nconst pReducer = persistReducer<any, any>(persistConfig, rootReducer);\n\nconst store = createStore(\n  pReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <I18nextProvider i18n={i18next}>\n      <Provider store={store}>\n        <PersistGate persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </I18nextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}